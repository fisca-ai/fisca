---
import { Image } from "astro:assets";
import Base from "@/layouts/Base.astro";
import Cta from "@/layouts/components/Cta.astro";
import Title from "@/layouts/components/Title.astro";
import Swiper, { SwiperClass } from "@/layouts/components/Swiper.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";
import { useTranslatedPath } from "@/i18n/utils";

// types for frontmatters
export interface Props {
  lang?: string;
}

// distructure frontmatters
const { lang } = Astro.props;

const homepage = await getEntry("homepage", lang!);

const {
  banner,
  feature,
  app,
  benefits,
  integration,
  services,
  testimony,
  call_to_action,
} = homepage!.data;

const integration_swiper = SwiperClass.Integration;
const service_swiper = SwiperClass.Service;

const tp = useTranslatedPath(lang!);
---

<Base lang={lang}>
  <!-- banner -->
  <section
    class="section pb-[50px] bg-banner fade-slide"
    data-bg="/images/banner-background.webp"
  >
    <div class="container">
      <div class="row flex flex-wrap lg:flex-nowrap items-center">
        <div class="lg:w-1/2 pr-4 lg:order-1">
          <div class="text-center lg:text-left animate-right">
            <Title title={banner!.title} tag="h1" />

            {
              banner?.content && (
                <p class="mt-4" set:html={markdownify(banner.content)} />
              )
            }

            {
              banner?.button?.enable && (
                <a class="btn btn-black mt-4" href={tp(banner.button.link)}>
                  {banner.button.label}
                </a>
              )
            }
          </div>
        </div>
        <!-- <div class="lg:w-1/2 pl-4 mt-12 lg:mt-0"> -->
        <div class="lg:w-1/2 pl-4 mt-12 lg:mt-0 lg:order-2 md:w-3/4 mx-auto">
          <!--?xml version="1.0"?-->
          <svg
            class="mx-auto max-w-full lg:max-w-none animate-left"
            width="100%"
            viewBox="0 0 400 400"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g class="layer" transform="scale(2)">
              <title>Layer 1</title>
              <path
                d="m66.52,36.65a70,70 0 0 0 -29.86,29.85l0.53,0.27a69.4,69.4 0 0 1 29.61,-29.59l-0.28,-0.53z"
                fill="#109A97"
                id="svg_1"
                stroke="#109A97"
                stroke-width="0"></path>
              <path
                d="m37.16,130.71l-0.53,0.28a70,70 0 0 0 29.62,29.77l0.28,-0.53a69.4,69.4 0 0 1 -29.37,-29.52z"
                fill="#109A97"
                id="svg_2"
                stroke="#109A97"
                stroke-width="0"></path>
              <path
                d="m160.39,130.71a69.4,69.4 0 0 1 -29.85,29.77l0.28,0.53a70,70 0 0 0 30.1,-30.02l-0.53,-0.28z"
                fill="#109A97"
                id="svg_3"
                stroke="#109A97"
                stroke-width="0"></path>
              <path
                d="m130.99,36.63l-0.28,0.53a69.4,69.4 0 0 1 29.66,29.64l0.53,-0.28a70,70 0 0 0 -29.91,-29.89z"
                fill="#109A97"
                id="svg_4"
                stroke="#109A97"
                stroke-width="0"></path>
              <path
                d="m98.47,0c-16.05,0 -29.07,13.02 -29.07,29.07c0,16.06 13.02,29.08 29.08,29.08c16.05,0 29.07,-13.02 29.07,-29.08c0,-16.05 -13.02,-29.07 -29.08,-29.07zm0,0.6c15.73,0 28.48,12.74 28.48,28.47s-12.75,28.48 -28.48,28.48c-15.72,0 -28.47,-12.75 -28.47,-28.48c0,-15.73 12.75,-28.47 28.47,-28.47z"
                fill="#109A97"
                id="svg_5"
                stroke="#109A97"
                stroke-width="0"></path>
              <path
                d="m168.47,69.7c-16.05,0 -29.07,13.02 -29.07,29.07c0,16.06 13.02,29.08 29.07,29.08c16.06,0 29.08,-13.02 29.08,-29.08c0,-16.05 -13.02,-29.07 -29.08,-29.07zm0,0.6c15.73,0 28.48,12.74 28.48,28.47c0,15.73 -12.75,28.48 -28.48,28.48c-15.72,0 -28.47,-12.75 -28.47,-28.48s12.75,-28.47 28.47,-28.47z"
                fill="#109A97"
                id="svg_6"
                stroke="#109A97"
                stroke-width="0"></path>
              <path
                d="m98.47,139.4c-16.05,0 -29.07,13.02 -29.07,29.07c0,16.06 13.02,29.08 29.07,29.08c16.06,0 29.08,-13.02 29.08,-29.08c0,-16.05 -13.02,-29.07 -29.08,-29.07zm0,0.6c15.73,0 28.48,12.75 28.48,28.47c0,15.73 -12.75,28.48 -28.48,28.48c-15.73,0 -28.47,-12.75 -28.47,-28.48c0,-15.72 12.75,-28.47 28.47,-28.47z"
                fill="#109A97"
                id="svg_7"
                stroke="#109A97"
                stroke-width="0"></path>
              <path
                d="m29.07,69.4c-16.05,0 -29.07,13.02 -29.07,29.07c0,16.06 13.02,29.08 29.07,29.08c16.06,0 29.08,-13.02 29.08,-29.08c0,-16.05 -13.02,-29.07 -29.08,-29.07zm0,0.6c15.73,0 28.48,12.75 28.48,28.47c0,15.73 -12.75,28.48 -28.48,28.48c-15.73,0 -28.47,-12.75 -28.47,-28.48c0,-15.72 12.74,-28.47 28.47,-28.47z"
                fill="#109A97"
                id="svg_8"
                stroke="#109A97"
                stroke-width="0"></path>
              <text
                fill="#000000"
                font-family="Helvetica"
                font-size="7"
                font-weight="bold"
                id="svg_13"
                stroke="#109A97"
                stroke-width="0"
                text-anchor="middle"
                x="98.52"
                xml:space="preserve"
                y="27">{banner?.svg_text0}</text
              >
              <text
                fill="#000000"
                font-family="Helvetica"
                font-size="7"
                font-weight="bold"
                id="svg_13"
                stroke="#109A97"
                stroke-width="0"
                text-anchor="middle"
                x="98.52"
                xml:space="preserve"
                y="36">{banner?.svg_text1}</text
              >
              <text
                fill="#000000"
                font-family="Helvetica"
                font-size="7"
                font-weight="bold"
                id="svg_14"
                stroke="#109A97"
                stroke-width="0"
                text-anchor="middle"
                x="169.16"
                xml:space="preserve"
                y="100.97">{banner?.svg_text2}</text
              >
              <text
                fill="#000000"
                font-family="Helvetica"
                font-size="7"
                font-weight="bold"
                id="svg_15"
                stroke="#109A97"
                stroke-width="0"
                text-anchor="middle"
                transform="matrix(1 0 0 1 0 0)"
                x="98.5"
                xml:space="preserve"
                y="172.8">{banner?.svg_text3}</text
              >
              <text
                fill="#000000"
                font-family="Helvetica"
                font-size="7"
                font-weight="bold"
                id="svg_16"
                stroke="#109A97"
                stroke-width="0"
                text-anchor="middle"
                transform="matrix(1 0 0 1 0 0)"
                x="29.33"
                xml:space="preserve"
                y="95.97">{banner?.svg_text4}</text
              >
              <text
                fill="#000000"
                font-family="Helvetica"
                font-size="7"
                font-weight="bold"
                id="svg_17"
                stroke="#109A97"
                stroke-width="0"
                text-anchor="middle"
                transform="matrix(1 0 0 1 0 0)"
                x="28.5"
                xml:space="preserve"
                y="104.8">{banner?.svg_text5}</text
              >
            </g>
          </svg>
        </div>
      </div>
    </div>
  </section>
  <script>
    document.addEventListener("astro:page-load", function () {
      const lazyLoad = (entries: any, observer: any) => {
        entries.forEach((entry: any) => {
          if (entry.isIntersecting) {
            const bgImageUrl = entry.target.getAttribute("data-bg");
            entry.target.style.backgroundImage = `url(${bgImageUrl})`;
            entry.target.classList.add("loaded");
            observer.unobserve(entry.target);
          }
        });
      };

      const observer = new IntersectionObserver(lazyLoad, { threshold: 0.1 });

      document.querySelectorAll(".bg-banner").forEach((el) => {
        observer.observe(el);
      });
    });
  </script>

  <!-- ./End banner -->

  <!-- Benefits -->
  <section class="section bg-theme-light">
    <div class="container">
      <div class="grid gap-x-4 gap-y-6 sm:grid-cols-2 lg:grid-cols-4">
        {
          benefits!.map((benefit: any, i: number) => (
            <div class="feature-card rounded-xl bg-white p-5  text-center">
              <Title title={benefit!.title} tag="h4" />
              <Title title={benefit!.subtitle} tag="h6" />
              {/* <p class="mt-3">{benefit.content}</p> */}
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Services -->
  {
    services!.map((service: any, index: number) => {
      const isEvent = index % 2 == 0;
      return (
        <section class={`section ${!isEvent && "bg-theme-light"}`}>
          <div class="container">
            <div class="items-center gap-8 md:grid md:grid-cols-2">
              <div
                class={`service-carousel ${!isEvent && "md:order-2"} ${isEvent ? "animateElementRight" : "animateElementLeft"}`}
              >
                <Swiper
                  images={service!.images}
                  width={600}
                  height={300}
                  swiper_class={service_swiper}
                />
              </div>

              <div
                class={`service-content text-center lg:text-left mt-5 md:mt-0 ${!isEvent && "md:order-1"}`}
              >
                <Title title={service!.title} tag="h2" />
                <p class="mt-4 mb-2">{service?.content}</p>
                {service?.button?.enable && (
                  <a
                    href={tp(service?.button.link)}
                    class="cta-link inline-flex items-center text-primary"
                  >
                    {service?.button.label}
                    <img
                      class="ml-1"
                      src="/images/arrow-right.svg"
                      width={18}
                      height={14}
                      alt="arrow"
                      loading={index == 0 ? "eager" : "lazy"}
                    />
                  </a>
                )}
              </div>
            </div>
          </div>
        </section>
      );
    })
  }

  <script>
    let observer: IntersectionObserver | null;
    function initializeIntersectionObserver() {
      // JavaScript to observe element visibility and trigger animation
      observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              if (entry.target.classList.contains("animateElementLeft")) {
                entry.target.classList.add("animate-left");
              } else if (
                entry.target.classList.contains("animateElementRight")
              ) {
                entry.target.classList.add("animate-right");
              }
            }
          });
        },
        {
          threshold: 0.5, // Trigger when 50% of element is visible
        }
      );

      // Target the element to observe
      const animateElementLeft =
        document.getElementsByClassName("animateElementLeft");
      const animateElementRight = document.getElementsByClassName(
        "animateElementRight"
      );

      // Start observing the element
      if (animateElementLeft) {
        Array.from(animateElementLeft).forEach((element) =>
          observer!.observe(element)
        );
      }
      if (animateElementRight) {
        Array.from(animateElementRight).forEach((element) =>
          observer!.observe(element)
        );
      }
    }

    function removeExistingObserver() {
      if (observer) {
        observer.disconnect();
        observer = null;
      }
    }

    document.addEventListener("astro:page-load", () => {
      // Remove existing observer
      removeExistingObserver();
      // Initialize on page load
      initializeIntersectionObserver();
    });
  </script>
  <!-- ./End service -->

  <!-- Integrations -->
  <section class="section pb-0">
    <!-- <section class="section"> -->
    <!-- <div class="container">
      <div class="text-center mb-4">
        <div class="font-primary text-l">
          <Title title={integration!.title} tag="div" />
        </div>
      </div>
      <div class="integration-carousel">
        <Swiper
          images={integration!.images}
          width={170}
          height={50}
          swiper_class={integration_swiper}
        />
      </div>
    </div> -->
  </section>

  <!-- Features -->
  <section class="section bg-theme-light">
    <div class="container">
      <div class="text-center">
        <h2>{markdownify(feature!.title)}</h2>
      </div>
      <div class="mt-8 grid gap-x-8 gap-y-6 sm:grid-cols-2 lg:grid-cols-3">
        {
          feature!.features.map((item: any, i: number) => (
            <div class="feature-card rounded-xl bg-white p-5 pb-8 text-center">
              {item.icon && (
                <img
                  class="mx-auto"
                  alt={item.icon}
                  src={item.icon}
                  width={30}
                  height={30}
                />
              )}
              <div class="mt-4">
                <Title title={item.title} tag="h5" />
                <p class="mt-3">{item.content}</p>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- App -->
  <section class="section">
    <div class="container">
      <div class="grid
      gap-x-8
      sm:grid-cols-3
      lg:grid-cols-5">
        <h5 class="lg:col-start-2" style="margin: auto">
          {markdownify(app!.title)}
        </h5>
        <a href={app!.google_link}>
          <Image
            class="mx-auto p-2"
            src={app?.google}
            width={250}
            height={130}
            alt="Google link"
          />
        </a>

        <a href={app!.apple_link}>
          <Image
            class="mx-auto p-2"
            src={app?.apple}
            width={250}
            height={130}
            alt="Apple link"
          />
        </a>
      </div>
    </div>
  </section>

  <!-- Testimony -->
  <section class="section pb-0 bg-theme-light">
    <!-- <div class="container">
      <div class="text-center">
        <h3>{markdownify(testimony!.title)}</h3>
      </div>
      <div class="swiper testimony-swiper w-10/12 max-w-xs mx-auto">
        <div class="swiper-wrapper">
          {
            testimony.testimonies.map((testimony: any) => (
              <div class="swiper-slide flex justify-center items-center p-4">
                <div class="bg-white p-6 rounded-lg shadow-lg transition-transform duration-300 ease-in-out transform hover:scale-105 flex flex-col items-center">
                  <div class="w-32 h-32 rounded-full overflow-hidden flex justify-center items-center mb-4">
                    <img
                      src={testimony.image}
                      alt={testimony.title}
                      class="w-full h-full object-cover"
                    />
                  </div>
                  <div class="p-4 text-center">
                    <h5 class="text-primary">{testimony.title}</h5>
                    <h6>{testimony.subtitle}</h6>
                    <p class="text-gray-600">{testimony.content}</p>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
        <div class="pagination"></div>
      </div>
    </div> -->
  </section>
  <script>
    import { Swiper } from "swiper";
    import "swiper/css";
    import "swiper/css/pagination";
    import { Autoplay, Pagination } from "swiper/modules";

    // astro:page-load event is fired when the page is loaded
    document.addEventListener("astro:page-load", () => {
      new Swiper(".testimony-swiper", {
        modules: [Pagination, Autoplay],
        autoplay: {
          delay: 3000,
        },
        pagination: {
          type: "bullets",
          el: ".testimony-swiper .pagination",
          clickable: true,
        },
      });
    });
  </script>
  <!-- ./End Testimony -->

  <!-- Call to Action -->
  <Cta lang={lang} cta={call_to_action} />
</Base>
