---
import Logo from "@/components/Logo.astro";
import { nav_button } from "@/config/config.json";
import menu from "@/config/menu.json";
import LanguagePicker from "@/components/LanguagePicker.astro";
import { useTranslations, useTranslatedPath } from "@/i18n/utils";

const { lang } = Astro.props;

const pathname = new URL(Astro.request.url).pathname;

export interface ChildNavigationLink {
  name: string;
  url: string;
}

export interface NavigationLink {
  name: string;
  url: string;
  hasChildren?: boolean;
  children?: ChildNavigationLink[];
}

const { main }: { main: NavigationLink[] } = menu;

const t = useTranslations(lang!);
const tp = useTranslatedPath(lang!);
---

<header class="header sticky top-0 z-10 bg-white shadow">
  <nav class="navbar container">
    <!-- logo -->
    <div class="order-0">
      <Logo lang={lang} />
    </div>
    <!-- navbar toggler -->
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      id="show-button"
      for="nav-toggle"
      class="order-2 flex cursor-pointer items-center md:order-1 md:hidden"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>{t("Menu Open")}</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>
    <label
      id="hide-button"
      for="nav-toggle"
      class="order-2 cursor-pointer items-center md:order-1"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>{t("Menu Close")}</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>
    <!-- /navbar toggler -->

    <ul
      id="nav-menu"
      class="navbar-nav order-3 hidden w-full md:order-1 md:flex md:w-auto md:space-x-2"
    >
      {
        main.map((menu) => (
          <>
            {menu.hasChildren ? (
              <li class="nav-item nav-dropdown group relative">
                <span class="nav-link inline-flex items-center">
                  {t(menu.name)}
                  <svg class="h-4 w-4 fill-current" viewBox="0 0 20 20">
                    <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                  </svg>
                </span>
                <ul class="nav-dropdown-list hidden group-hover:block md:invisible md:absolute md:block md:opacity-0 md:group-hover:visible md:group-hover:opacity-100">
                  {menu.children?.map((child) => (
                    <li class="nav-dropdown-item">
                      <a
                        href={tp(child.url)}
                        class={`nav-dropdown-link block ${
                          pathname === tp(child.url) && "nav-link-active"
                        }`}
                      >
                        {t(child.name)}
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            ) : (
              <li class="nav-item">
                <a
                  href={tp(menu.url)}
                  class={`nav-link block ${
                    pathname === tp(menu.url) && "nav-link-active"
                  }`}
                >
                  {t(menu.name)}
                </a>
              </li>
            )}
          </>
        ))
      }
      {
        nav_button.enable && (
          <div class="block md:hidden">
            <a
              class="btn btn-primary z-0 ml-auto py-[14px]"
              href={tp(nav_button.link)}
            >
              {t(nav_button.label)}
            </a>
          </div>
        )
      }
    </ul>
    <div class="block md:hidden">
      <LanguagePicker lang={lang} />
    </div>
    {
      nav_button.enable && (
        <div class="order-1 ml-auto hidden items-center md:order-2 md:ml-0 md:flex">
          <LanguagePicker lang={lang} />
          <div class="order-1">
            <a
              class="btn btn-primary z-0 ml-auto py-[14px]"
              href={tp(nav_button.link)}
            >
              {t(nav_button.label)}
            </a>
          </div>
        </div>
      )
    }
  </nav>
  <div
    id="header_progress_bar"
    class="bg-primary top-0 left-0 relative z-[100] w-0 h-[4px]"
  >
  </div>
</header>

<script>
  window.onscroll = function () {
    ScrollIndicator();
  };

  function ScrollIndicator() {
    var winScroll =
      document.body.scrollTop || document.documentElement.scrollTop;
    var height =
      document.documentElement.scrollHeight -
      document.documentElement.clientHeight;
    var scrolled = (winScroll / height) * 100;
    var progress_bar = document.getElementById("header_progress_bar");
    if (progress_bar) {
      progress_bar.style.width = scrolled + "%";
    }
  }
</script>
