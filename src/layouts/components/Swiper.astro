---
import { Image } from "astro:assets";

export enum SwiperClass {
  Service = "service-swiper",
  Integration = "integration-swiper",
}

export interface SwiperProps {
  images: string[];
  width: number;
  height: number;
  swiper_class: SwiperClass;
}

const { images, width, height, swiper_class } = Astro.props as SwiperProps;
---

<div class="swiper-container">
  {
    images.length > 1 ? (
      <div class={`swiper ${swiper_class}`}>
        <div class="swiper-wrapper">
          {images.map((image: string) => (
            <div class="swiper-slide">
              <img
                class={`lazyload fade-slide mx-auto h-auto ${swiper_class == SwiperClass.Integration && "grayscale"}`}
                data-src={image}
                width={width}
                height={height}
                alt=""
              />
            </div>
          ))}
        </div>
        {swiper_class == SwiperClass.Service && <div class="pagination" />}
      </div>
    ) : (
      <img
        class="lazyload fade-slide mx-auto"
        data-src={images[0]}
        width={width}
        height={height}
        alt=""
      />
    )
  }
</div>

<style>
  .swiper-container {
    overflow: hidden; /* Hide overflow if the SVG is larger than the container */
    /* display: flex; */
    align-items: center;
    justify-content: center; /* Center the SVG in the container */
  }
  img {
    object-fit: contain; /* Ensures the SVG scales proportionally */
  }
  .grayscale {
    filter: grayscale(100%);
    transition: filter 0.3s ease;
  }
  .grayscale:hover {
    filter: grayscale(0%);
  }
</style>

<script>
  import { Swiper } from "swiper";
  import "swiper/css";
  import "swiper/css/pagination";
  import { Autoplay, Pagination } from "swiper/modules";

  // astro:page-load event is fired when the page is loaded
  document.addEventListener("astro:page-load", () => {
    new Swiper(".service-swiper", {
      modules: [Pagination, Autoplay],
      autoplay: {
        delay: 3000,
      },
      pagination: {
        type: "bullets",
        el: ".service-swiper .pagination",
        clickable: true,
      },
    });
  });
  document.addEventListener("astro:page-load", () => {
    new Swiper(".integration-swiper", {
      breakpoints: {
        320: {
          slidesPerView: 1,
        },
        480: {
          slidesPerView: 2,
        },
        640: {
          slidesPerView: 3,
        },
        768: {
          slidesPerView: 4,
        },
        // 1024: {
        //   slidesPerView: 5,
        // },
      },
      modules: [Autoplay],
      autoplay: {
        delay: 3000,
      },
    });
  });

  // Lazy load images when they come into view
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const img = entry.target.querySelectorAll("img");
          img.forEach((img) => {
            if (img && !img.src) {
              img.src = img.dataset.src as string;
              img.onload = () => {
                img.classList.add("loaded");
              };
            }
          });
        }
      });
    },
    {
      threshold: 0.5, // Trigger when 50% of element is visible
    }
  );

  // Target the Swiper slides
  const swiperSlides = document.querySelectorAll(".swiper-container");

  // Start observing each Swiper slide
  swiperSlides.forEach((slide) => observer.observe(slide));
</script>
